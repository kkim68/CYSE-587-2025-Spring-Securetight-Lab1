import random
import time

class SweepingJammer:
    def __init__(self, jamming_probability=0.3, noise_intensity=0.7, jamming_power_dbm=-70, freq_range=(2.4, 2.5), sweep_time=0.5):
        self.jamming_probability = jamming_probability
        self.noise_intensity = noise_intensity
        self.jamming_power_dbm = jamming_power_dbm
        self.freq_range = freq_range  # Frequency range in GHz
        self.sweep_time = sweep_time  # Time to sweep through the frequency range
        self.current_frequency = freq_range[0]

    def sweep_frequency(self):
        """Simulate frequency sweeping by changing the frequency over time."""
        while True:
            self.current_frequency = random.uniform(self.freq_range[0], self.freq_range[1])
            print(f"[Jammer] Sweeping to frequency {self.current_frequency:.2f} GHz")
            time.sleep(self.sweep_time)

    def jam_signal(self, message, signal_frequency):
        """Introduce signal degradation if the jammer frequency matches the signal frequency."""
        if abs(self.current_frequency - signal_frequency) < 0.01 and random.random() < self.jamming_probability:
            print(f"[Jammer] Jamming signal at {signal_frequency:.2f} GHz")
            if random.random() < self.noise_intensity:
                print("[Jammer] Message completely lost!")
                return None, True
            else:
                message['latitude'] += random.uniform(-0.1, 0.1)
                message['longitude'] += random.uniform(-0.1, 0.1)
                message['altitude'] += random.uniform(-100, 100)
                return message, True
        return message, False

    def jamming_signal_power(self):
        return self.jamming_power_dbm

# Example usage (in a real scenario, you would run sweep_frequency in a separate thread)
if __name__ == "__main__":
    jammer = SweepingJammer()
    test_message = {'latitude': 40.7128, 'longitude': -74.0060, 'altitude': 15}
    signal_frequency = 2.45

    # Simulate the sweeping in a separate thread
    import threading
    sweep_thread = threading.Thread(target=jammer.sweep_frequency, daemon=True)
    sweep_thread.start()

    while True:
        msg, jammed = jammer.jam_signal(test_message.copy(), signal_frequency)
        if jammed:
            print("Jammed message:", msg)
        else:
            print("Message transmitted successfully.")
        time.sleep(1)
